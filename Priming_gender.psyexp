<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2025.1.1">
  <Settings>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="Thank you for your patience." valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="Priming_gender" valType="str" updates="None" name="expName"/>
    <Param val="" valType="str" updates="None" name="expVersion"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpNetIP4Address"/>
    <Param val="4242" valType="str" updates="None" name="gpNetPort"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="60" valType="str" updates="None" name="gpSamplingRate"/>
    <Param val="BINOCULAR" valType="str" updates="None" name="gpTrackEyes"/>
    <Param val="PsychToolbox" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="info" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="training_block_female">
      <RoutineSettingsComponent name="training_block_female" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="training_block_female" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="MAN_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="MAN_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.8, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="MAN" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="WOMAN_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="WOMAN_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.8, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="WOMAN" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextboxComponent name="Fname" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Angsana New" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="Fname" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$Female" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <ImageComponent name="female_pic" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="women.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="female_pic" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.7, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="men_pic_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="men.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="men_pic_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.7, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="'j','k'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="priming_block">
      <RoutineSettingsComponent name="priming_block" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="priming_block" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="trial_init" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# --- BEGIN EXPERIMENT ---&amp;#10;import random&amp;#10;from psychopy import core&amp;#10;&amp;#10;name_ids = {}&amp;#10;next_id = 21 &amp;#10;# Try to load all names from the conditions file if available&amp;#10;if 'Name' in thisExp.entries:&amp;#10;    unique_names = sorted(set(thisExp.entries['Name']))&amp;#10;else:&amp;#10;    # fallback if CSV not yet loaded&amp;#10;    unique_names = []&amp;#10;    &amp;#10;print(&quot;Initialized name trigger mapping (empty for now):&quot;, name_ids)&amp;#10;&amp;#10;&amp;#10;# Path to your face images folder (relative to experiment folder)&amp;#10;face_path = os.path.join(_thisDir, &quot;facebank_clean&quot;)&amp;#10;&amp;#10;# General timers and codes&amp;#10;trialClock = core.Clock()&amp;#10;end_trial_code = 90&amp;#10;&amp;#10;# Stimulus state flags&amp;#10;stimulus_name_started = False&amp;#10;stimulus_pic_started = False&amp;#10;trial_ended = False&amp;#10;&amp;#10;# Example trigger code dictionaries&amp;#10;combo_ids = {&quot;mm&quot;:71, &quot;mf&quot;:72, &quot;ff&quot;:73, &quot;fm&quot;:74}&amp;#10;&amp;#10;# Dynamically generate face IDs from folder contents&amp;#10;face_files = [f for f in os.listdir(face_path) if f.endswith(&quot;.png&quot;)]&amp;#10;face_ids = {f: i+1 for i, f in enumerate(sorted(face_files))}&amp;#10;&amp;#10;# Optional debug print&amp;#10;print(&quot;Loaded faces:&quot;, face_files)&amp;#10;print(&quot;Setup complete — ready for trials.&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# --- BEGIN ROUTINE ---&amp;#10;import random&amp;#10;&amp;#10;# Base duration&amp;#10;base_name_dur = 0.25  # 250 ms&amp;#10;jitter = 0.05          # ±50 ms&amp;#10;&amp;#10;# Randomize for this trial&amp;#10;name_duration = base_name_dur + random.uniform(-jitter, jitter)&amp;#10;print(f&quot;Name duration for this trial: {name_duration:.3f}s&quot;)&amp;#10;# --- Blank duration (after name) ---&amp;#10;blank_duration = random.uniform(0.3, 0.5)  # 300–500 ms&amp;#10;# Reset timers and flags&amp;#10;trialClock.reset()&amp;#10;stimulus_name_started = False&amp;#10;stimulus_pic_started = False&amp;#10;trial_ended = False&amp;#10;&amp;#10;# Set up this trial’s name and face from CSV&amp;#10;current_name = Name&amp;#10;current_face = Face&amp;#10;name_gender = NameGender&amp;#10;&amp;#10;# Ensure name_ids has this name mapped&amp;#10;if current_name not in name_ids:&amp;#10;    name_ids[current_name] = len(name_ids) + 21&amp;#10;&amp;#10;# Set text and image&amp;#10;Priming_Name.text = current_name &amp;#10;current_face_file = os.path.join(face_path, current_face)&amp;#10;&amp;#10;if os.path.exists(current_face_file):&amp;#10;    Priming_Face.setImage(current_face_file)&amp;#10;    print(f&quot;Current trial: {current_name} ({name_gender}), {current_face}&quot;)&amp;#10;else:&amp;#10;    print(f&quot;ERROR: Image not found: {current_face_file}&quot;)&amp;#10;&amp;#10;# Hide both at start&amp;#10;Priming_Name.setAutoDraw(False)&amp;#10;Priming_Face.setAutoDraw(False)&amp;#10;&amp;#10;# Determine combination trigger (face_gender + name_gender)&amp;#10;face_gender = &quot;m&quot; if &quot;_m&quot; in current_face else &quot;f&quot;&amp;#10;combo_code = combo_ids[face_gender + name_gender]&amp;#10;&amp;#10;# --- Send combination trigger at trial start ---&amp;#10;outlet.push_sample([combo_code])&amp;#10;win.callOnFlip(print, &quot;Trial/Combo Trigger sent:&quot;, combo_code)&amp;#10;&amp;#10;# --- Send name trigger immediately after ---&amp;#10;NameTrig = name_ids.get(current_name, 0)&amp;#10;outlet.push_sample([NameTrig])&amp;#10;win.callOnFlip(print, &quot;Name Trigger sent:&quot;, NameTrig)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# --- EACH FRAME ---&amp;#10;&amp;#10;t = trialClock.getTime()&amp;#10;&amp;#10;# --- Name display with jitter ---&amp;#10;if 0 &lt;= t &lt; name_duration:&amp;#10;    Priming_Name.setAutoDraw(True)&amp;#10;    Priming_Face.setAutoDraw(False)&amp;#10;    if not stimulus_name_started:&amp;#10;        stimulus_name_start_time = globalClock.getTime()&amp;#10;        stimulus_name_started = True&amp;#10;        print(f&quot;Time {t:.3f}s: Name displayed&quot;)&amp;#10;&amp;#10;# --- Short blank after name (e.g., 100 ms) ---&amp;#10;elif name_duration &lt;= t &lt; name_duration + blank_duration:&amp;#10;    Priming_Name.setAutoDraw(False)&amp;#10;    Priming_Face.setAutoDraw(False)&amp;#10;&amp;#10;# --- Face display until trial end ---&amp;#10;elif t &gt;= name_duration + blank_duration:&amp;#10;    Priming_Name.setAutoDraw(False)&amp;#10;    Priming_Face.setAutoDraw(True)&amp;#10;    if not stimulus_pic_started:&amp;#10;        stimulus_pic_started = True&amp;#10;        ImageTrig = face_ids[current_face]&amp;#10;        outlet.push_sample([ImageTrig])&amp;#10;        win.callOnFlip(print, &quot;Face Trigger sent:&quot;, ImageTrig)&amp;#10;        print(f&quot;Time {t:.3f}s: Face displayed&quot;)&amp;#10;&amp;#10;# Timeout requeue if no response after 3 s&amp;#10;if t &gt;= 3.0 and not response.keys and not trial_ended:&amp;#10;    outlet.push_sample([end_trial_code])&amp;#10;    win.callOnFlip(print, &quot;End-of-Trial Trigger sent (timeout):&quot;, end_trial_code)&amp;#10;    print(f&quot;Timeout! Trial ended (no response): {current_name}, {current_face}&quot;)&amp;#10;    trial_ended = True&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;# End trial on response&amp;#10;if response.keys and not trial_ended:&amp;#10;    outlet.push_sample([end_trial_code])&amp;#10;    win.callOnFlip(print, &quot;End-of-Trial Trigger sent (response):&quot;, end_trial_code)&amp;#10;    print(f&quot;Response detected at {t:.3f}s — trial ended&quot;)&amp;#10;    trial_ended = True&amp;#10;    continueRoutine = False&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="t = trialClock.getTime();&amp;#10;if (((0 &lt;= t) &amp;&amp; (t &lt; name_duration))) {&amp;#10;    Priming_Name.setAutoDraw(true);&amp;#10;    Priming_Face.setAutoDraw(false);&amp;#10;    if ((! stimulus_name_started)) {&amp;#10;        stimulus_name_start_time = globalClock.getTime();&amp;#10;        stimulus_name_started = true;&amp;#10;        console.log(`Time ${util.pad(Number.parseFloat(t).toFixed(3), 1)}s: Name displayed`);&amp;#10;    }&amp;#10;} else {&amp;#10;    if (((name_duration &lt;= t) &amp;&amp; (t &lt; (name_duration + blank_duration)))) {&amp;#10;        Priming_Name.setAutoDraw(false);&amp;#10;        Priming_Face.setAutoDraw(false);&amp;#10;    } else {&amp;#10;        if ((t &gt;= (name_duration + blank_duration))) {&amp;#10;            Priming_Name.setAutoDraw(false);&amp;#10;            Priming_Face.setAutoDraw(true);&amp;#10;            if ((! stimulus_pic_started)) {&amp;#10;                stimulus_pic_started = true;&amp;#10;                ImageTrig = face_ids[current_face];&amp;#10;                outlet.push_sample([ImageTrig]);&amp;#10;                psychoJS.window.callOnFlip(print, &quot;Face Trigger sent:&quot;, ImageTrig);&amp;#10;                console.log(`Time ${util.pad(Number.parseFloat(t).toFixed(3), 1)}s: Face displayed`);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((((t &gt;= 3.0) &amp;&amp; (! response.keys)) &amp;&amp; (! trial_ended))) {&amp;#10;    outlet.push_sample([end_trial_code]);&amp;#10;    psychoJS.window.callOnFlip(print, &quot;End-of-Trial Trigger sent (timeout):&quot;, end_trial_code);&amp;#10;    console.log(`Timeout! Trial ended (no response): ${current_name}, ${current_face}`);&amp;#10;    trial_ended = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if ((response.keys &amp;&amp; (! trial_ended))) {&amp;#10;    outlet.push_sample([end_trial_code]);&amp;#10;    psychoJS.window.callOnFlip(print, &quot;End-of-Trial Trigger sent (response):&quot;, end_trial_code);&amp;#10;    console.log(`Response detected at ${util.pad(Number.parseFloat(t).toFixed(3), 1)}s — trial ended`);&amp;#10;    trial_ended = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="Priming_Name.setAutoDraw(false);&amp;#10;Priming_Face.setAutoDraw(false);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;Priming_Name.setAutoDraw(False)&amp;#10;Priming_Face.setAutoDraw(False)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trial_init" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="MAN_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="MAN_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.8, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="MAN" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="MAN_3_desc" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="MAN_3_desc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.8, 0.7)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press the k key" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="WOMAN_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="WOMAN_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.8, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="WOMAN" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="WOMAN_3_desc" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="WOMAN_3_desc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.8, 0.7)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press the j key" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextboxComponent name="Priming_Name" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Noto Sans Thai" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.3" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="Priming_Name" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$current_name&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <ImageComponent name="Priming_Face" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$current_face_file" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Priming_Face" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.2, 1.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="response" plugin="None">
        <Param val="'j','k'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="response" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="training_block">
      <RoutineSettingsComponent name="training_block" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="training_block" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="MAN" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="MAN" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.8, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="MAN" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="WOMAN" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="WOMAN" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.8, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="WOMAN" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="fixation" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="pic" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$Image" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="pic" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.2, 1.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.4" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'j','k'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="error_feedback" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="red" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="red" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="error_feedback" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="45" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (keyResp.keys) {&amp;#10;    if (_pj.in_es6(&quot;man&quot;, imageStim.image)) {&amp;#10;        correctKey = &quot;j&quot;;&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(&quot;woman&quot;, imageStim.image)) {&amp;#10;            correctKey = &quot;k&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;    if ((keyResp.keys[0] !== correctKey)) {&amp;#10;        errorCross.setAutoDraw(true);&amp;#10;    } else {&amp;#10;        errorCross.setAutoDraw(false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="## Only show feedback if a key has been pressed&amp;#10;#if key_resp.keys:  # keyResp is your Keyboard component&amp;#10;#    # Determine the correct key based on the image&amp;#10;#    if &quot;men.png&quot; in pic.image:  # imageStim is your Image component&amp;#10;#        correctKey = 'k'&amp;#10;#    elif &quot;women.png&quot; in pic.image:&amp;#10;#        correctKey = 'j'&amp;#10;#    &amp;#10;#    # Show cross if wrong&amp;#10;#    if key_resp.keys[0] != correctKey:&amp;#10;#        error_feedback.setAutoDraw(True)&amp;#10;#    else:&amp;#10;#        error_feedback.setAutoDraw(False)&amp;#10;        " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <CounterbalanceRoutine name="counterbalance">
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="conditionsVariable" updates="None" val="" valType="code"/>
      <Param name="disabled" updates="None" val="False" valType="bool"/>
      <Param name="endExperimentOnDepletion" updates="None" val="ignore" valType="code"/>
      <Param name="nGroups" updates="None" val="2" valType="code"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="nSlots" updates="None" val="10" valType="code"/>
      <Param name="name" updates="None" val="counterbalance" valType="code"/>
      <Param name="saveData" updates="None" val="True" valType="bool"/>
      <Param name="saveRemaining" updates="None" val="True" valType="bool"/>
      <Param name="specMode" updates="None" val="uniform" valType="str"/>
    </CounterbalanceRoutine>
    <Routine name="feedback_training">
      <RoutineSettingsComponent name="feedback_training" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="feedback_training" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="errorCross" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="red" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="red" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="errorCross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="45" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (key_resp.keys) {&amp;#10;    if (_pj.in_es6(&quot;men.png&quot;, pic.image)) {&amp;#10;        correctKey = &quot;j&quot;;&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(&quot;women.png&quot;, pic.image)) {&amp;#10;            correctKey = &quot;k&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;    if ((keyResp.keys[0] !== correctKey)) {&amp;#10;        errorCross.setAutoDraw(true);&amp;#10;    } else {&amp;#10;        errorCross.setAutoDraw(false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="# Only show feedback if a key has been pressed&amp;#10;if key_resp.keys:  # keyResp is your Keyboard component&amp;#10;    # Determine the correct key based on the image&amp;#10;    if &quot;men.png&quot; in pic.image:  # imageStim is your Image component&amp;#10;        correctKey = 'j'&amp;#10;    elif &quot;women.png&quot; in pic.image:&amp;#10;        correctKey = 'k'&amp;#10;    &amp;#10;# Show cross only if wrong&amp;#10;if key_resp.keys != correctKey:&amp;#10;&amp;#10;    errorCross.setAutoDraw(True)&amp;#10;else:&amp;#10;    continueRoutine = False  # skip routine if correct" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="priming_instruction">
      <RoutineSettingsComponent name="priming_instruction" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="priming_instruction" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="instruction_slide_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Instruction.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="instruction_slide_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="instruction_continue_2" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="instruction_continue_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="training_Instruction">
      <RoutineSettingsComponent name="training_Instruction" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="training_Instruction" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="import serial&amp;#10;from pylsl import StreamInfo, StreamOutlet&amp;#10;info = StreamInfo(name = 'PsychoPy_LSL', type='Markers', channel_count=1, nominal_srate=0, channel_format='int32', source_id='psy_marker')&amp;#10;outlet = StreamOutlet(info)&amp;#10;#port = serial.Serial('COM4',115200)&amp;#10;#" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="import * as serial from 'serial';&amp;#10;import {StreamInfo, StreamOutlet} from 'pylsl';&amp;#10;info = new StreamInfo({&quot;name&quot;: &quot;PsychoPy_LSL&quot;, &quot;type&quot;: &quot;Markers&quot;, &quot;channel_count&quot;: 1, &quot;nominal_srate&quot;: 0, &quot;channel_format&quot;: &quot;int32&quot;, &quot;source_id&quot;: &quot;psy_marker&quot;});&amp;#10;outlet = new StreamOutlet(info);&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="instruction_slide" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Instruction.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="instruction_slide" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="instruction_continue" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="instruction_continue" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Ending">
      <RoutineSettingsComponent name="Ending" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Ending" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#port.close()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="training_Instruction"/>
    <LoopInitiator loopType="TrialHandler" name="priming">
      <Param name="Selected rows" updates="None" val="0:3" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Face', 'face1_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_m.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face1_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face2_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face3_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face4_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face5_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face6_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face7_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face8_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face9_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'กฤษณะ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'นเรศ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'ธนพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'อรรถพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'ชัยวัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'ปริญญา'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'ภูมิพัฒน์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'วรพล'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'ศักดิ์สิทธิ์'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'พิสิฐ'), ('NameGender', 'm')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'กาญจนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'พิมพ์ใจ'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'วาสนา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'สุพัตรา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'ศิริพร'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'อาภรณ์'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'จิตติมา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'วรรณา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'สุนิสา'), ('NameGender', 'f')]), OrderedDict([('Face', 'face10_w.png'), ('Name', 'ปัทมา'), ('NameGender', 'f')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="permutations.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="priming" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="priming_block"/>
    <LoopTerminator name="priming"/>
    <Routine name="Ending"/>
  </Flow>
</PsychoPy2experiment>
